// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace wqwz.Controllers
{
    public partial class FormDataController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public FormDataController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected FormDataController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddArray()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddArray);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult _GetEdu()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames._GetEdu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult _GetEduInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames._GetEduInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Find()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Find);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Remove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public FormDataController Actions { get { return MVC.FormData; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "FormData";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "FormData";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string AddArray = "AddArray";
            public readonly string _GetEdu = "_GetEdu";
            public readonly string _GetEduInfo = "_GetEduInfo";
            public readonly string Add = "Add";
            public readonly string Find = "Find";
            public readonly string Remove = "Remove";
            public readonly string Update = "Update";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string AddArray = "AddArray";
            public const string _GetEdu = "_GetEdu";
            public const string _GetEduInfo = "_GetEduInfo";
            public const string Add = "Add";
            public const string Find = "Find";
            public const string Remove = "Remove";
            public const string Update = "Update";
        }


        static readonly ActionParamsClass_AddArray s_params_AddArray = new ActionParamsClass_AddArray();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddArray AddArrayParams { get { return s_params_AddArray; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddArray
        {
            public readonly string FormFieldId = "FormFieldId";
            public readonly string PostData = "PostData";
            public readonly string FormId = "FormId";
            public readonly string FileIndex = "FileIndex";
        }
        static readonly ActionParamsClass__GetEdu s_params__GetEdu = new ActionParamsClass__GetEdu();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass__GetEdu _GetEduParams { get { return s_params__GetEdu; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass__GetEdu
        {
            public readonly string id = "id";
            public readonly string isFilt = "isFilt";
        }
        static readonly ActionParamsClass__GetEduInfo s_params__GetEduInfo = new ActionParamsClass__GetEduInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass__GetEduInfo _GetEduInfoParams { get { return s_params__GetEduInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass__GetEduInfo
        {
            public readonly string guid = "guid";
        }
        static readonly ActionParamsClass_Add s_params_Add = new ActionParamsClass_Add();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Add AddParams { get { return s_params_Add; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Add
        {
            public readonly string entity = "entity";
        }
        static readonly ActionParamsClass_Find s_params_Find = new ActionParamsClass_Find();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Find FindParams { get { return s_params_Find; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Find
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Remove s_params_Remove = new ActionParamsClass_Remove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Remove RemoveParams { get { return s_params_Remove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Remove
        {
            public readonly string entity = "entity";
        }
        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string entity = "entity";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _GetEdu = "_GetEdu";
                public readonly string _GetEduInfo = "_GetEduInfo";
            }
            public readonly string _GetEdu = "~/Views/FormData/_GetEdu.cshtml";
            public readonly string _GetEduInfo = "~/Views/FormData/_GetEduInfo.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_FormDataController : wqwz.Controllers.FormDataController
    {
        public T4MVC_FormDataController() : base(Dummy.Instance) { }

        [NonAction]
        partial void AddArrayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int[] FormFieldId, string[] PostData, int FormId, int[] FileIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddArray(int[] FormFieldId, string[] PostData, int FormId, int[] FileIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddArray);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FormFieldId", FormFieldId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PostData", PostData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FormId", FormId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FileIndex", FileIndex);
            AddArrayOverride(callInfo, FormFieldId, PostData, FormId, FileIndex);
            return callInfo;
        }

        [NonAction]
        partial void _GetEduOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool isFilt);

        [NonAction]
        public override System.Web.Mvc.ActionResult _GetEdu(int id, bool isFilt)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames._GetEdu);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isFilt", isFilt);
            _GetEduOverride(callInfo, id, isFilt);
            return callInfo;
        }

        [NonAction]
        partial void _GetEduInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid guid);

        [NonAction]
        public override System.Web.Mvc.ActionResult _GetEduInfo(System.Guid guid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames._GetEduInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "guid", guid);
            _GetEduInfoOverride(callInfo, guid);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            AddOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, wqwz.Models.FormData entity);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add(wqwz.Models.FormData entity)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entity", entity);
            AddOverride(callInfo, entity);
            return callInfo;
        }

        [NonAction]
        partial void FindOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Find(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Find);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            FindOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void RemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, wqwz.Models.FormData entity);

        [NonAction]
        public override System.Web.Mvc.ActionResult Remove(wqwz.Models.FormData entity)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entity", entity);
            RemoveOverride(callInfo, entity);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, wqwz.Models.FormData entity);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(wqwz.Models.FormData entity)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entity", entity);
            UpdateOverride(callInfo, entity);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108
